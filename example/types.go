//go:generate goldigen --in "config/types.yml" --out "types.go" --package github.com/fgrosse/servo/main --function RegisterTypes --overwrite --nointeraction
package main

import (
	"github.com/fgrosse/goldi"
	"github.com/fgrosse/servo/example/endpoints"
	"github.com/fgrosse/servo/example/lib"
	"github.com/fgrosse/servo/handlers"
)

// RegisterTypes registers all types that have been defined in the file "config/types.yml"
//
// DO NOT EDIT THIS FILE: it has been generated by goldigen v0.9.7.
// It is however good practice to put this file under version control.
// See https://github.com/fgrosse/goldi for what is going on here.
func RegisterTypes(types goldi.TypeRegistry) {
	types.RegisterAll(map[string]goldi.TypeFactory{
		"composed_endpoint":        goldi.NewType(handlers.ComposedHandler, "@my_controller::OuterHandlerAction", "@my_controller::SecondHandlerAction", "@my_controller::FancyAction"),
		"controller_endpoint":      goldi.NewFuncReferenceType("my_controller", "FancyAction"),
		"greet_user_endpoint":      goldi.NewFuncType(endpoints.GreetUserEndpoint),
		"hello_world_endpoint":     goldi.NewFuncType(endpoints.HelloWorldEndpoint),
		"kernel.http_handler":      goldi.NewType(handlers.AdapterHandler, "@my_app.logging_adapter", "@my_app.http_handler_func"),
		"my_app.http_handler_func": goldi.NewType(handlers.ComposedHandler, "@servo.routing.router::ServeHTTP"),
		"my_app.logging_adapter":   goldi.NewType(handlers.LoggingAdapter, "@my_logger"),
		"my_controller":            goldi.NewStructType(new(endpoints.FancyController), "@my_service_client"),
		"my_logger":                goldi.NewProxyType("logger_provider", "GetLogger", "my_app"),
		"my_service_client":        goldi.NewType(lib.NewMockServiceClient, "%my_app.some_parameter%"),
	})
}
